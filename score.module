<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_entity_presave().
 *
 * Recalculate impact score for the single node being saved.
 * Dynamically creates the score field if it does not exist on the bundle.
 */
function score_entity_presave(EntityInterface $entity) {
  // Only act on nodes.
  if ($entity->getEntityTypeId() !== 'node') {
    return;
  }

  $config = \Drupal::config('score.settings');
  $score_definitions = $config->get('score_definitions') ?? [];

  foreach ($score_definitions as $definition_id => $definition) {
    // Make sure structure is present and matches node bundle.
    if (
      !empty($definition['entity_type']) &&
      $definition['entity_type'] === 'node' &&
      !empty($definition['bundles']) &&
      in_array($entity->bundle(), (array) $definition['bundles'], TRUE)
    ) {
      // Use the canonical service to get the score field name for this entity.
      $score_field = \Drupal::service('score.calculator')->getFinalScoreField($entity);

      $field_created = FALSE;

      // --- BEGIN: DYNAMIC FIELD CREATION ---
      if ($score_field && !$entity->hasField($score_field)) {
        // Create field storage if it doesn't exist.
        if (!FieldStorageConfig::loadByName('node', $score_field)) {
          FieldStorageConfig::create([
            'field_name' => $score_field,
            'entity_type' => 'node',
            'type' => !empty($definition['field_type']) ? $definition['field_type'] : 'decimal', // Default to decimal
            'cardinality' => 1,
            'translatable' => FALSE,
          ])->save();
          $field_created = TRUE;
        }

        // Create field config for this bundle if it doesn't exist.
        if (!FieldConfig::loadByName('node', $entity->bundle(), $score_field)) {
          FieldConfig::create([
            'field_name' => $score_field,
            'entity_type' => 'node',
            'bundle' => $entity->bundle(),
            'label' => !empty($definition['label']) ? $definition['label'] : ucfirst(str_replace('_', ' ', $score_field)),
            'required' => FALSE,
            'settings' => [],
          ])->save();
          $field_created = TRUE;
        }

        // Clear the field definition cache so the new field is available immediately.
        \Drupal::service('entity_field.manager')->clearCachedFieldDefinitions();

        // Optional: Notify admin if a new field was created.
        if ($field_created) {
          \Drupal::messenger()->addStatus(t('Score field %field has been created on bundle %bundle.', [
            '%field' => $score_field,
            '%bundle' => $entity->bundle(),
          ]));
        }
      }
      // --- END: DYNAMIC FIELD CREATION ---

      // Only recalc if the entity actually has the configured score field.
      if ($score_field && $entity->hasField($score_field)) {
        // Calculate the score.
        \Drupal::service('score.calculator')->calculateScores($entity);

        // Show message to the user.
        $field_def = $entity->getFieldDefinition($score_field);
        $label = $field_def ? $field_def->getLabel() : $score_field;
        $value = $entity->get($score_field)->value ?? 0.0;
        $formatted = \Drupal::service('score.calculator')->formatScoreForDisplay((float) $value);

        \Drupal::messenger()->addStatus(t('@label recalculated: @value', [
          '@label' => $label,
          '@value' => $formatted,
        ]));
      }
    }
  }
}
